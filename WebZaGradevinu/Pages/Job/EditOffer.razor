@page "/Poslovi/EditOffer/{id}"
@using WebZaGradevinu.Data
@using WebZaGradevinu.Services
@using System.IO
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@inject NavigationManager NavigationManager
@inherits OwningComponentBase<JobsService>
@*@using Microsoft.AspNetCore.Components.Authorization
    @inject AuthenticationStateProvider AuthenticationStateProvider*@


<h3>Dorada @jobload.Name</h3>

<EditForm Model="@jobload" OnValidSubmit="HandleValidSubmit">
    <ValidationSummary />

    <div class="form-group">
        <label for="imeprijedloga" class="control-label">Ime poslovnog prijedloga</label>
        <InputText id="imeprijedloga" class="form-control" @bind-Value="jobload.Name"></InputText><br />
        <ValidationMessage For="@(() => jobload.Name)" />
    </div>
    <div class="form-group">
        <label for="pocetakrad" class="control-label">Pocetak radova</label>
        <InputDate class="form-control" @bind-Value="jobload.PocetakRadova" id="pocetakrad"></InputDate><br />
        <ValidationMessage For="@(() => jobload.PocetakRadova)" />
    </div>
    <div class="form-group">
        <label class="control-label" for="descrip">Kratki opis posla</label>
        <InputText class="form-control" id="descrip" @bind-Value="jobload.Description"></InputText><br />
        <ValidationMessage For="@(() => jobload.Description)" />
    </div>
    <div class="form-group">
        <label class="control-label" for="adresa">Adresa posla:</label>
        <InputText class="form-control" id="adresa" @bind-Value="jobload.Adresa"></InputText><br />
        <ValidationMessage For="@(() => jobload.Adresa)" />
    </div>
    <div class="form-group">
        <label class="control-label" for="grad">Grad:</label>
        <InputSelect class="form-control" id="grad" @bind-Value="jobload.CityId">
            <br />
            <option selected disabled="true">-- Odaberite Grad --</option>
            @foreach (var grad in cities)
            {
                <option value="@grad.ID">@grad.Name</option>
            }

        </InputSelect>
        <ValidationMessage For="@(() => jobload.CityId)" />
    </div>
    <div class="form-group">
        <label class="control-label" for="sobe">Soba potrebna za radit</label>
        <InputSelect class="form-control" id="sobe" @bind-Value="jobload.Rooms">
            <option selected disabled="true">-- Izaberite sobu --</option>
            @foreach (Jobs.Room soba in Enum.GetValues(typeof(Jobs.Room)))
            {
                <option>@soba.ToString()</option>
            }

        </InputSelect>
        <ValidationMessage For="@(() => jobload.Rooms)" />
    </div>
    <div class="form-group">
        <label class="control-label" for="widedescrip">Širok opis posla</label>
        <InputTextArea class="form-control" id="widedescrip" @bind-Value="jobload.WideDescription"></InputTextArea><br />
        <ValidationMessage For="@(() => jobload.WideDescription)" />
    </div>

    <div class="form-group">
        <input type="submit" value="Spremi" class="btn btn-outline-primary" />
    </div>

</EditForm>


@code {

    [Parameter]
    public string id { get; set; }

    private Jobs jobload = new Jobs();
    List<City> cities;
    public string UserName;

    protected override void OnInitialized()
    {
        UserName = httpContextAccessor.HttpContext.User.Identity.Name;
        cities = Service.GetCities();
        jobload = Service.GetJobForEdit(Convert.ToInt32(id));
    }

    private async Task HandleValidSubmit()
    {
        await Service.OnEditOffer(jobload);
        NavigationManager.NavigateTo("Poslovi");
    }

}
