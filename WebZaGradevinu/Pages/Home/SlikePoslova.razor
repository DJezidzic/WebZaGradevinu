@page "/slikePoslova"
@inject NavigationManager NavigationManager

<h3>Galerija slika</h3>

<div class="btn-group">

    @foreach (var item in types)
    {
        if (Array.IndexOf(types, item) == selected)
        {
            <button class="btn btn-primary">@item.Name</button>
        }
        else
        {
            <button class="btn btn-secondary" @onclick="()=> selected = Array.IndexOf(types,item) ">@item.Name</button>
        }

    }
    <button class="btn btn-secondary" @onclick="@NavigateToImageUpload">Upload Images</button>

</div>
@if (isLoaded)
{
    @GetRenderFragment(types[selected])
}

else
{
<div class="spinner"></div>
}



@code {

    bool isLoaded;
    RenderFragment GetRenderFragment(Type type)
    {
        RenderFragment renderFragment = renderTreeBuilder =>
        {
            renderTreeBuilder.OpenComponent(0, type);
            renderTreeBuilder.CloseComponent();
        };
        return renderFragment;
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(2000); // TODO actual initialization job
        isLoaded = true;
    }

    int selected;
    ComponentBase[] components = { new Bazen(), new Kupaona(), new Ostalo() };
    Type[] types => components.Select(c => c.GetType()).ToArray();

    private void NavigateToImageUpload() { NavigationManager.NavigateTo("ImageUpload"); }

}
